# ====================================================================================
# ARQUIVO .GITATTRIBUTES PARA O PROJETO CORTEXA
#
# Este arquivo define atributos por padrão de arquivo para manter a consistência
# do repositório, independentemente do ambiente do desenvolvedor.
# ====================================================================================


# --- COMPORTAMENTO PADRÃO ---
#
# Normaliza todas as terminações de linha para LF (Line Feed) no check-in.
# Isso evita problemas de "linhas alteradas" entre Windows (CRLF) e Linux/macOS (LF).
# A diretiva `eol=lf` força LF a ser a terminação de linha no repositório.
* text=auto eol=lf


# --- ARQUIVOS DE CÓDIGO E TEXTO ---
#
# Garante explicitamente que arquivos de código e texto comuns usem terminações LF.
*.js      eol=lf
*.jsx     eol=lf
*.ts      eol=lf
*.tsx     eol=lf
*.py      eol=lf
*.html    eol=lf
*.css     eol=lf
*.scss    eol=lf
*.md      eol=lf
*.json    eol=lf
*.yml     eol=lf
*.yaml    eol=lf
*.sql     eol=lf
*.txt     eol=lf


# --- SCRIPTS DE SHELL ---
#
# Scripts de shell DEVEM ter terminações LF para serem executáveis em ambientes Unix.
*.sh      eol=lf


# --- ARQUIVOS ESPECÍFICOS DO WINDOWS ---
#
# Mantém a terminação CRLF para arquivos que são específicos do Windows.
*.bat     eol=crlf
*.cmd     eol=crlf
*.ps1     eol=crlf


# --- ARQUIVOS BINÁRIOS ---
#
# Identifica arquivos binários para que o Git não tente fazer diff ou conversão
# de terminações de linha neles, o que poderia corrompê-los.
*.png     binary
*.jpg     binary
*.jpeg    binary
*.gif     binary
*.ico     binary
*.svg     binary
*.pdf     binary
*.woff    binary
*.woff2   binary
*.eot     binary
*.ttf     binary
*.otf     binary
*.zip     binary
*.gz      binary
*.rar     binary
*.exe     binary
*.dll     binary


# --- GIT LFS (LARGE FILE STORAGE) ---
#
# Descomente e ajuste as linhas abaixo se você usa Git LFS para gerenciar
# arquivos grandes, como modelos de IA, datasets ou outros binários pesados.
# Isso é ALTAMENTE RECOMENDADO para projetos de Machine Learning.
#
# Ex.:
# *.h5      filter=lfs diff=lfs merge=lfs -text
# *.pth     filter=lfs diff=lfs merge=lfs -text
# *.onnx    filter=lfs diff=lfs merge=lfs -text
# *.parquet filter=lfs diff=lfs merge=lfs -text
# *.csv     filter=lfs diff=lfs merge=lfs -text
# *.pkl     filter=lfs diff=lfs merge=lfs -text
# *.joblib  filter=lfs diff=lfs merge=lfs -text


# --- REGRAS DE DIFF ---
#
# Evita que o Git gere diffs para arquivos que não são legíveis por humanos
# ou que geram diffs muito grandes e inúteis, poluindo pull requests.
package-lock.json -diff
yarn.lock         -diff
dist/* -diff
*.min.* -diff binary

# Para melhorar a visualização de diffs em Jupyter Notebooks,
# você pode configurar um diff driver customizado (como nbdime) e descomentar a linha abaixo.
# *.ipynb           diff=jupyter


# --- CONTROLE DE ARQUIVAMENTO ---
#
# Impede que certos arquivos e diretórios sejam incluídos quando você cria
# um arquivo de exportação com `git archive`. Útil para não exportar testes ou config. de CI.
/.github          export-ignore
/tests/           export-ignore
/.vscode/         export-ignore
/.idea/           export-ignore
*.test.* export-ignore


# --- ATRIBUTOS DO GITHUB LINGUIST ---
#
# Ajuda o GitHub a classificar corretamente a linguagem do projeto,
# especialmente para arquivos ambíguos ou gerados.
# Ex.:
# vendor/* linguist-vendored
# assets/js/generated.js linguist-generated